model_build_conv(conv_layer_count=[1, 2], conv_vs_pool=True,
                 init_filters=32, lambda_conv=0, lambda_dense=0.001,
                 global_average_vs_max=False, final_pool_size=3,
                 dense_layers=[50, 10], dropout=[0.5, 0.25],
                 is_only_for_plotting=False)

This builds the Keras model for our convolutional neural network.
We start with convolutional layers consisting of 5x5 filters
operating on 28x28 images, then we map to to 14x14 images, either
using max pooling or a convolutional layer with a stride of 2.
We then apply convolutional layers consisting of 3x3 filters,
with the last layer having no padding, resulting in 12x12 images.
We then apply either global average pooling or max pooling before
feeding our features into a dense network.

The convolutional layers are regularized with batch normalization,
while the dense layers are regularized with dropout.

Parameters
----------
conv_layer_count : list of two positive integers
    conv_layer_count[0] is the number of convolutional layers
    to apply before reducing from 28x28 images to 14x14,
    while conv_layer_count[1] is the number of convolutional
    layers to apply to 14x14 images before the final pooling step.
conv_vs_pool : bool
    If conv_vs_pool is True, we will use a convolutional layer
    with 5x5 filters and a stride of 2 to reduce from 28x28 to
    14x14 images. If False, we will use max pooling with a
    pool_size of 2 instead.
init_filters : positive integer
    the number of filters to start with; we will increase the number
    of filters in powers of 2 as our features become smaller.
lambda_conv : nonnegative float
    L2 regularization parameter for convolutional layers; as we
    are already regularizing with batch normalization, we will
    most likely set this to zero.
lambda_dense : nonnegative float
    L2 regularization parameter for dense layers.
global_average_vs_max : bool
    determines whether our final pooling layer is a global average
    or max pooling layer
final_pool_size : positive integer
    If global_average_vs_max is False, this variable determines
    pool_size for the final max pooling layer.
dense_layers : list of positive integers
    List of sizes of dense layers. The last element
    is the output layer.
    dense_layers[-1] should be the number of classes.
dropout : list of floats between 0 and 1
    list of dropout probabilities for dense layers
is_only_for_plotting : bool
    this variable should only be set to True for making diagrams of the
    model. The model will not work for training if it set to True.

Returns
-------
model : keras.engine.sequential.Sequential
    the resultant Keras model